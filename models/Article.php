<?php

namespace app\models;

use Yii;

/**
 * This is the model class for table "article".
 *
 * @property int $id
 * @property string|null $title
 * @property string|null $description
 * @property string|null $dateCurrentCreate
 * @property string|null $content
 * @property string|null $image
 * @property int|null $viewed
 * @property int|null $userId
 * @property int|null $status
 * @property int|null $categoryId
 *
 * @property Category $category
 * @property Comment[] $comments
 */
class Article extends \yii\db\ActiveRecord
{
    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'article';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['description', 'content', 'image'], 'string'],
            [['description', 'content', 'title'], 'required'],
            [['dateCurrentCreate'], 'safe'],
            [['viewed', 'userId', 'status', 'categoryId'], 'integer'],
            [['title'], 'string', 'max' => 200],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'title' => 'Title',
            'description' => 'Description',
            'dateCurrentCreate' => 'Date Current Create',
            'content' => 'Content',
            'image' => 'Image',
            'viewed' => 'Viewed',
            'userId' => 'User ID',
            'status' => 'Status',
            'categoryId' => 'Category ID',
        ];
    }

    /**
     * Gets query for [[ArticleTags]].
     *
     * @return \yii\db\ActiveQuery
     */
    public function getCategory()
    {
        return $this->hasOne(Category::className(), ['id' => 'categoryId']);
    }

    public function getTags()
    {
        return $this->hasMany(Tag::className(), ['id' => 'tagId'])
            ->viaTable('article_tag', ['articleId' => 'id']);
    }
    public function getDate()
    {
        return Yii::$app->formatter->asDate($this->dateCurrentCreate);
    }
    /**
     * Gets query for [[Comments]].
     *
     * @return \yii\db\ActiveQuery
     */
    public function getComments()
    {
        return $this->hasMany(Comment::className(), ['articleId' => 'id']);
    }

    public function saveImage($upload)
    {
        $this->image = $upload;

        return $this->save(false);
    }

    public function deleteCurrentImage()
    {
        $image = new UploadImage();
        $image->deleteImage($this->image);
    }

    public function beforeDelete()
    {
        $this->deleteCurrentImage();

        return parent::beforeDelete(); // TODO: Change the autogenerated stub
    }

    public function getImage()
    {
        return ($this->image) ? '/uploads/' . $this->image : '/uploads/' . 'no-image.png';
    }

    public function saveCategory($category)
    {

        $this->categoryId = $category;
        return $this->save(false);
    }

    public function saveTags(array $tags)
    {
        ArticleTag::deleteAll(['articleID' => $this->id]);

        foreach ($tags as $tag)
        {
            $model = Tag::findOne($tag);
            $this->link('tags', $model);
        }
        return true;
    }

    public function saveArticle()
    {
        $this->userId = \Yii::$app->user->id;
        return $this->save();
    }

}
